name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend Testing
  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
        
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run backend tests
      run: npm test
      
    - name: Run ESLint
      run: npm run lint

  # Web Frontend Testing
  web-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
        
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run web tests
      run: npm test
      
    - name: Run ESLint
      run: npm run lint

  # Mobile App Testing
  mobile-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mobile
        
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: mobile/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run mobile tests
      run: npm test
      
    - name: Run ESLint
      run: npm run lint

  # Dependency Check
  dependency-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        
    - name: Install root dependencies
      run: npm ci
      
    - name: Check for dependency conflicts
      run: node check_installation.js

  # Test Structure Validation
  test-validation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        
    - name: Validate test structure
      run: node scripts/validate-test-structure.js

  # Code Coverage Report
  coverage:
    runs-on: ubuntu-latest
    needs: [backend-test, web-test, mobile-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        
    - name: Generate coverage reports
      run: |
        echo "Generating coverage reports for all components..."
        # This would be expanded to actually generate and combine coverage reports
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella