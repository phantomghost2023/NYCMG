version: '3.8'

services:
  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@db:5432/nycmg
      - JWT_SECRET=development_secret_key
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # Web Frontend
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:3000/api
    depends_on:
      - backend
    volumes:
      - ./web:/app
      - /app/node_modules
    command: npm run dev

  # Mobile App (Development)
  mobile:
    build:
      context: ./mobile
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./mobile:/app
      - /app/node_modules
    command: npm start

  # Database
  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=nycmg
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql

  # Redis
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"

  # Adminer (Database UI)
  adminer:
    image: adminer
    ports:
      - "8080:8080"

volumes:
  postgres_data: